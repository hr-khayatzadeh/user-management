name: "Deploy branch to AWS"

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-20.04
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0

      - name: "Determine build version"
        run: echo BUILD_VERSION=`=$(mvn --non-recursive help:evaluate -Dexpression=project.version | grep -v '\[.*') echo $VERSION

      - name: 'Prepare ECS docker image tags'
        run: |
          echo "APP_IMAGE_TAG=${{ secrets.ECR_REGISTRY }}/user-management:$BUILD_VERSION" >> $GITHUB_ENV

      - name: 'Build docker image'
        env:
          ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        run: docker-compose build

      - name: 'Tag docker image'
        run: |
          docker tag user-management:latest "$APP_IMAGE_TAG" 

      - name: "Configure AWS credentials"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: "Login to ECR registry"
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.ECR_REGISTRY }}
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: "Push image to ECR registry"
        run: |
          docker push "$APP_IMAGE_TAG"

      - name: "Deploying backend to ECS"
        uses: brunocascio/ecs-deploy@v2.0.0
        with:
          args: >
            deploy cluster-name service-name
            --image user-management ${{ env.APP_IMAGE_TAG }}
            --region ${{ secrets.AWS_REGION }}
            --timeout 600 --rollback